06-11-2018

concept of encapsulation using components has been abandoned. 
This concept is broken in unity by default as any component can be gotten
with the GetComponent() methods, so therefore trying to restrict access to
any components is futile. 

Body, Mind, IDecisionMaker IPerformable classes are introduced

Body extends Unified controller and is a unity component. It adds "game" 
concepts to the controller such as stamina, health etc. It also links a
Mind class to the controller, which processes the commands for the controller.

Mind is the base command processing center. Its not a decision maker itself, but
its inheriting classes are. This is where commands for what the body is to do 
come from. The mind can also be overridden by another decision maker, and it will 
then ignore its own decisions in favor of the overriders decisions. This is especcially
useful for player control, or a mind control effect.

IDecision makers are classes that implement the method GetDecisions(). GetDecisions() 
is a method that returns a performable that the mind is to enumerate over. The performable 
uses the sensory stats from mind and body to decide how to accomplish its task.
For example, the IPerformable ForageForFood would say "set random destination. Every frame 
check if there is food in the area. If so, harvest food, else continue wandering." "if
full of food, yield break;"

the player control components TESTSCRIPT_PlayerUnifiedControl and player2 control testscrips 
now exert control over Unified Controller through this performable -> decisionMaker -> Mind 
-> Body -> OverrideController pathway


